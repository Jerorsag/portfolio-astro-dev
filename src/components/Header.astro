---
import type { Header } from '../types/global';
import { getImageUrl } from '../services/global';
import { Menu, X } from '@lucide/astro';

interface Props {
  header: Header;
}

const { header } = Astro.props;
---

<header class="bg-white shadow-md p-4 sticky top-0 z-50">
  <div class="max-w-6xl mx-auto">
    <div class="grid grid-cols-3 items-center">
      
      <!-- Logo - Columna izquierda -->
      <div class="flex items-center justify-start">
        <a href={header.logo.href} class="flex items-center hover:opacity-80 transition-opacity">
          {header.logo.icon.data && (
            <img 
              src={getImageUrl(header.logo.icon.data.attributes.url)} 
              alt={header.logo.icon.data.attributes.alternativeText}
              class="h-10 w-auto mr-3"
            />
          )}
          <span class="font-bold text-xl text-gray-900">{header.logo.label}</span>
        </a>
      </div>

      <!-- Navigation - Columna central -->
      <nav class="hidden md:flex justify-center">
        <div class="flex space-x-8">
          {header.navItems.map(item => (
            <a 
              href={item.href} 
              class="text-gray-700 hover:text-blue-600 transition-colors font-medium text-sm"
            >
              {item.label}
            </a>
          ))}
        </div>
      </nav>

      <!-- Social Links - Columna derecha -->
      <div class="flex items-center justify-end space-x-5">
        <div class="hidden md:flex space-x-6">
          {header.socialLinks.map(social => (
            <a 
              href={social.href}
              target="_blank"
              rel="noopener noreferrer"
              class="text-gray-600 hover:text-blue-600 transition-colors"
              title={social.label}
            >
              {social.icon.data && (
                <img 
                  src={getImageUrl(social.icon.data.attributes.url)} 
                  alt={social.icon.data.attributes.alternativeText}
                  class="h-8 w-8"
                />
              )}
            </a>
          ))}
        </div>
      </div>

        <!-- Mobile Menu Button -->
        <button 
          id="mobile-menu-button"
          class="w-10 md:hidden p-2 rounded-lg text-gray-700 hover:text-blue-600 hover:bg-gray-100 transition-colors cursor-pointer ml-auto"
          aria-label="Abrir menÃº"
        >
          <!-- Menu Icon -->
          <Menu id="menu-icon" class="w-6 h-6" />
          <!-- Close Icon -->
          <X id="close-icon" class="w-6 h-6 hidden" />
        </button>
      </div>
    </div>

    <!-- Mobile Menu -->
    <div id="mobile-menu" class="md:hidden hidden mt-4 pt-4 border-t border-gray-200">
      <!-- Mobile Navigation -->
      <nav class="space-y-4 mb-6">
        {header.navItems.map(item => (
          <a 
            href={item.href} 
            class="block text-gray-700 hover:text-blue-600 transition-colors font-medium py-2"
          >
            {item.label}
          </a>
        ))}
      </nav>

      <!-- Mobile Social Links -->
      <div class="flex space-x-5 pt-4 border-t border-gray-200">
        {header.socialLinks.map(social => (
          <a 
            href={social.href}
            target="_blank"
            rel="noopener noreferrer"
            class="text-gray-600 hover:text-blue-600 transition-colors"
            title={social.label}
          >
            {social.icon.data && (
              <img 
                src={getImageUrl(social.icon.data.attributes.url)} 
                alt={social.icon.data.attributes.alternativeText}
                class="h-6 w-6"
              />
            )}
          </a>
        ))}
      </div>
    </div>
  </div>
</header>

<script>
  // Mobile menu functionality
document.addEventListener('DOMContentLoaded', function() {
  const button = document.getElementById('mobile-menu-button');
  const menu = document.getElementById('mobile-menu');
  const menuIcon = document.getElementById('menu-icon');
  const closeIcon = document.getElementById('close-icon');

  if (!button || !menu || !menuIcon || !closeIcon) return;

  function toggleMenu() {
    const isOpen = !menu.classList.contains('hidden');
    
    menu.classList.toggle('hidden', isOpen);
    menuIcon.classList.toggle('hidden', !isOpen);
    closeIcon.classList.toggle('hidden', isOpen);
  }

  function closeMenu() {
    menu.classList.add('hidden');
    menuIcon.classList.remove('hidden');
    closeIcon.classList.add('hidden');
  }

  // Toggle menu on button click
  button.addEventListener('click', toggleMenu);

  // Close menu when clicking nav links
  menu.querySelectorAll('nav a').forEach(link => {
    link.addEventListener('click', closeMenu);
  });

  // Close menu when clicking outside
  document.addEventListener('click', function(event) {
    if (!menu.contains(event.target) && 
        !button.contains(event.target) && 
        !menu.classList.contains('hidden')) {
      closeMenu();
    }
  });
});
</script>